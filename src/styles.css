/* Base styles */
body {
  margin: 0;
  font-family: sans-serif;
  background-color: #f5f5f5;
}


/* Top-level two-column layout */
.layout {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
  padding: 1rem;
}

/* Sidebar container */
.sidebar {
  flex: 0 0 500px;
  max-width: 100%;
}

/* Controls panel inside sidebar */
#controls {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  padding: 1rem;
  background-color: #fff;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  border-radius: 4px;
}

/* Buttons and selects in the sidebar */
#controls > button,
#controls select {
  padding: 0.5rem 0.75rem;
  font-size: 0.9rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: #fff;
  cursor: pointer;
}

/* Group of sliders */
.slider-group {
  width: 90%;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* Each slider label stacks title, slider, and value */
.slider-group label {
  display: flex;
  flex-direction: column;
  font-size: 0.9rem;
}

/* Range inputs fill container width */
.slider-group input[type="range"] {
  width: 100%;
  margin: 0.25rem 0;
}

/* Numeric value right-aligned */
.slider-group span {
  text-align: center;
  font-variant-numeric: tabular-nums;
}

.slider-group span.info {
  font-size: 0.9rem;
  color: #666;
  text-align: center;
}
.slider-group span.label {
  font-size: 1rem;
  text-align: center;
}


/* Main content area: raster + charts */
.content {
  display: flex;
  flex-direction: row;
  gap: 1rem;
}

/* Raster canvas styling */
#raster {
  border: 1px solid #ccc;
  background-color: #fff;
  width: 600px;
  height: 600px;
}

/* SVG charts styling */
svg {
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 4px;
}

/* Section headings */
h3 {
  margin: 0.5rem 0 0.25rem;
  font-size: 1rem;
}


/* Right‐hand plots column */
.plots-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  flex: 1;               /* take remaining space */
}

/* Optional: ensure each plot block expands nicely */
.plots-container .plot {
  /* if you want equal heights: */
  /* flex: 1; */
}


raster-container {
  /* keeps flex-item sizing based on its content */
  flex: 0 0 auto;
  /* make container hug its contents */
  display: inline-block;
}

/* 2) Ensure the canvas itself still fills that container exactly */
.raster-container canvas {
  display: block;   /* remove inline whitespace */
  width: 100%;      /* now equals the inline-block’s width */
  height: auto;     /* preserve aspect ratio if you ever change it */
}

/* 3) Help box fills exactly that same width and then wraps internally */
.raster-container #help-container {
  box-sizing: border-box;
  width: 100%;            /* equals the inline-block’s width */
  max-width: 600px;
  margin: 1rem 0;
  padding: 0.5rem;
  background: #fafafa;
  border: 1px solid #ddd;
  border-radius: 4px;
  white-space: normal;
  overflow-wrap: break-word;
  /* optional: cap its height and scroll if it gets too tall */
  max-height: 500px;
  overflow-y: auto;
}
